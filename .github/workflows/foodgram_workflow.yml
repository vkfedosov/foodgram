name: API Foodgram Project CI/CD

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/README.md'

jobs:
  tests:
    name: Test flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install requirements
        run: |
          cd backend
          pip install --upgrade pip 
          pip install -r requirements.txt
      - name: Test with flake8
        run: |
          python -m flake8

  build_and_push_to_docker_hub:
    name: Push images to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Backend to DockerHub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./backend/
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
      - name: Push Frontend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./frontend/
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
            sudo docker-compose stop
            sudo docker-compose rm backend
            touch .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo LOCALHOST=${{ secrets.LOCALHOST }} >> .env
            echo PORT=${{ secrets.PORT }} >> .env
            echo UPSTREAM=${{ secrets.UPSTREAM }} >> .env
            sudo docker-compose up -d 

  send_message:
    name: Send message to Telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен